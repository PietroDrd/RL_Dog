####### SEQUENTIAL TRAINING ####### 

@configclass
class RewardsCfg:
    """Reward terms for the MDP."""
                            ######## Positive weights: TRACKING the BASE Velocity (set to 0) ########
    track_lin_vel_xy_exp = RewTerm(
        func=mdp.track_lin_vel_xy_exp, weight=1.0, params={"command_name": "base_velocity", "std": math.sqrt(0.25)}
    )
    track_ang_vel_z_exp = RewTerm(
        func=mdp.track_ang_vel_z_exp, weight=0.8, params={"command_name": "base_velocity", "std": math.sqrt(0.25)}
    )
    desired_calf_contacts = RewTerm(
        func=mdp.undesired_contacts,
        weight=0.02,
        params={"sensor_cfg": SceneEntityCfg("contact_forces", body_names=".*_calf"), "threshold": 1.0},    # *_foot doesen't work even if in URDf is present
    )
    #### BODY PENALITIES
    base_height_l2 = RewTerm(
        func=mdp.base_height_l2,
        weight=-0.9,
        params={"asset_cfg": SceneEntityCfg("robot", body_names=["base"]), "target_height": 0.42}, # "target": 0.35         target not a param of base_pos_z
    )
    body_lin_acc_l2 = RewTerm(func=mdp.body_lin_acc_l2,  weight=-0.5)
    flat_orientation_l2 = RewTerm(func=mdp.flat_orientation_l2, weight=-0.4)
    
    lin_vel_z_l2    = RewTerm(func=mdp.lin_vel_z_l2,     weight=-0.4)
    ang_vel_xy_l2   = RewTerm(func=mdp.ang_vel_xy_l2,    weight=-0.3)
    

    #### JOINTS PENALITIES
    dof_pos_limits  = RewTerm(func=mdp.joint_pos_limits,  weight=-0.4)
    dof_pos_dev     = RewTerm(func=mdp.joint_deviation_l1, weight=-0.4)
    #dof_acc_l2      = RewTerm(func=mdp.joint_acc_l2,       weight=-2e-6)
    #dof_torques_l2  = RewTerm(func=mdp.joint_torques_l2,   weight=-1.0e-7)
    #dof_vel_l2      = RewTerm(func=mdp.joint_vel_l2,       weight=-0.001)

    #### OTHER PENALITIES
    # feet_air_time = RewTerm(
    #     func=mdp.feet_air_time,
    #     weight=0.04,
    #     params={
    #         "sensor_cfg": SceneEntityCfg("contact_forces", body_names=".*_calf"),   # *_foot doesen't work even if in URDf is present
    #         "command_name": "base_velocity",
    #         "threshold": 0.5,
    #     },
    # )

    action_rate_l2  = RewTerm(func=mdp.action_rate_l2,   weight=-0.02)
    undesired_thigh_contacts = RewTerm(
        func=mdp.undesired_contacts,
        weight=-0.8,
        params={"sensor_cfg": SceneEntityCfg("contact_forces", body_names=".*_thigh"), "threshold": 1.0},
    )
    undesired_body_contacts = RewTerm(
        func=mdp.undesired_contacts,
        weight=-1.0,
        params={"sensor_cfg": SceneEntityCfg("contact_forces", body_names="base"), "threshold": 1.0},
    )
